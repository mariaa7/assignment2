The first requirement is that the “web service works.” I met this requirement somewhat. Although it is not very fast at all. However, it returns a list of suggestions based on the user input eventually, and in somewhat Alphabetical order. I used a trie structure in order to get the suggestions, and used a dictionary in order to hold the children of each trieNode. This also falls under the requirement of using C#, as all my webservice code used C#. Another problem I faced, was the fact that my performance counter was not working properly, so I had to say 1000000 lines rather than adding lines to my trie until I ran out of space. I have all of a’s and b’s, and some ca’s.The next requirement is using AJAX to show the retrieved suggestions. In order to do this I used the onkeyup function that calls my AJAX function, which call the method getChildren and returns a list of strings which are the suggestions for the user’s input. I then add the list to the page using jQuery’s html function. A problem I faced with this is when running a method with AJAX that uses a parameter, I kept getting a 500 error. But I figured out that I needed to change the parameter in my method to match the name I used in my AJAX function.I filtered my titles file using terminal and a regex. I then added it to the blob, and later download that file. After that, I run through the file and add 1,000,000 lines to my trie, using my setNode method. In order to get the suggestions for the user input, I made a method that uses recursion that returns a list of ten suggestions.My webservice runs on azure, because I published it to azure’s cloud service.